{
    "hints": {
        "_acquireReadySmgInfo(byte[32])byte[64]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "proposal(uint64,uint64,uint64,byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "approveAndExecute(uint64,byte[32],byte[64],byte[32])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "initialize(address,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update()void": {
            "call_config": {
                "update_application": "CALL"
            }
        },
        "delete()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "bridge": {
                    "type": "uint64",
                    "key": "bridge",
                    "descr": "bridge app id"
                },
                "foundation": {
                    "type": "bytes",
                    "key": "foundation",
                    "descr": "foundation of the groupApprove"
                },
                "initialized": {
                    "type": "uint64",
                    "key": "initialized",
                    "descr": "initialized flag"
                },
                "taskCount": {
                    "type": "uint64",
                    "key": "taskCount",
                    "descr": "task count"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "groupApprove",
        "methods": [
            {
                "name": "_acquireReadySmgInfo",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "smgID"
                    }
                ],
                "returns": {
                    "type": "byte[64]"
                }
            },
            {
                "name": "proposal",
                "args": [
                    {
                        "type": "uint64",
                        "name": "_chainId"
                    },
                    {
                        "type": "uint64",
                        "name": "_to"
                    },
                    {
                        "type": "uint64",
                        "name": "_proposalType"
                    },
                    {
                        "type": "byte[]",
                        "name": "_data"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "approveAndExecute",
                "args": [
                    {
                        "type": "uint64",
                        "name": "proposalId"
                    },
                    {
                        "type": "byte[32]",
                        "name": "smgID"
                    },
                    {
                        "type": "byte[64]",
                        "name": "r"
                    },
                    {
                        "type": "byte[32]",
                        "name": "s"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "initialize",
                "args": [
                    {
                        "type": "address",
                        "name": "foundation"
                    },
                    {
                        "type": "uint64",
                        "name": "bridge"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delete",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {},
        "desc": "groupApprove entry point"
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}