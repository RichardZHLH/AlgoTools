{
    "hints": {
        "addAdmin(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "removeAdmin(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transferOwner(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transferUpdateOwner(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transferOracleAdmin(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "setHalt(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "setTokenPairFee(uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "setTokenPairFees(uint64[],uint64[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "setFee(uint64,uint64,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "setFees(uint64[],uint64[],uint64[],uint64[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "userLock(byte[32],uint64,string,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "setSmgFeeProxy(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "acquireReadySmgInfo(byte[32])byte[64]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "smgRelease(byte[32],byte[32],uint64,uint64,uint64,uint64,address,byte[64],byte[32])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in_token_id(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "addTokenPair(uint64,uint64,byte[],uint64,byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "removeTokenPair(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "updateTokenPair(uint64,uint64,byte[],uint64,byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "initialize(address,address,address,address,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update()void": {
            "call_config": {
                "update_application": "CALL"
            }
        },
        "delete()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        },
        "setStoremanGroupConfig(byte[32],uint8,byte[64],uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "setStoremanGroupStatus(byte[32],uint8)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 4,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "feeProxy": {
                    "type": "bytes",
                    "key": "feeProxy",
                    "descr": "fee proxy address"
                },
                "halted": {
                    "type": "uint64",
                    "key": "halted",
                    "descr": "halted flag"
                },
                "initialized": {
                    "type": "uint64",
                    "key": "initialized",
                    "descr": "initialized flag"
                },
                "oracleAdmin": {
                    "type": "bytes",
                    "key": "oracleAdmin",
                    "descr": "oracle admin"
                },
                "owner": {
                    "type": "bytes",
                    "key": "owner",
                    "descr": "owner of the bridge"
                },
                "updateOwner": {
                    "type": "bytes",
                    "key": "updateOwner",
                    "descr": "owner to update the bridge"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "bridge",
        "methods": [
            {
                "name": "addAdmin",
                "args": [
                    {
                        "type": "address",
                        "name": "adminAccount"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "removeAdmin",
                "args": [
                    {
                        "type": "address",
                        "name": "adminAccount"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "transferOwner",
                "args": [
                    {
                        "type": "address",
                        "name": "_newOwner"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "transferUpdateOwner",
                "args": [
                    {
                        "type": "address",
                        "name": "_newOwner"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "transferOracleAdmin",
                "args": [
                    {
                        "type": "address",
                        "name": "_newOracleAdmin"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setHalt",
                "args": [
                    {
                        "type": "uint64",
                        "name": "_halt"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setTokenPairFee",
                "args": [
                    {
                        "type": "uint64",
                        "name": "tokenPairID"
                    },
                    {
                        "type": "uint64",
                        "name": "contractFee"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setTokenPairFees",
                "args": [
                    {
                        "type": "uint64[]",
                        "name": "tokenPairID"
                    },
                    {
                        "type": "uint64[]",
                        "name": "contractFee"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setFee",
                "args": [
                    {
                        "type": "uint64",
                        "name": "srcChainID"
                    },
                    {
                        "type": "uint64",
                        "name": "destChainID"
                    },
                    {
                        "type": "uint64",
                        "name": "contractFee"
                    },
                    {
                        "type": "uint64",
                        "name": "agentFee"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setFees",
                "args": [
                    {
                        "type": "uint64[]",
                        "name": "srcChainID"
                    },
                    {
                        "type": "uint64[]",
                        "name": "destChainID"
                    },
                    {
                        "type": "uint64[]",
                        "name": "contractFee"
                    },
                    {
                        "type": "uint64[]",
                        "name": "agentFee"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "userLock",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "smgID"
                    },
                    {
                        "type": "uint64",
                        "name": "tokenPairID"
                    },
                    {
                        "type": "string",
                        "name": "userAccount"
                    },
                    {
                        "type": "uint64",
                        "name": "value"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setSmgFeeProxy",
                "args": [
                    {
                        "type": "address",
                        "name": "proxy"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "acquireReadySmgInfo",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "smgID"
                    }
                ],
                "returns": {
                    "type": "byte[64]"
                }
            },
            {
                "name": "smgRelease",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "uniqueID"
                    },
                    {
                        "type": "byte[32]",
                        "name": "smgID"
                    },
                    {
                        "type": "uint64",
                        "name": "tokenPairID"
                    },
                    {
                        "type": "uint64",
                        "name": "value"
                    },
                    {
                        "type": "uint64",
                        "name": "fee"
                    },
                    {
                        "type": "uint64",
                        "name": "tokenAccount"
                    },
                    {
                        "type": "address",
                        "name": "userAccount"
                    },
                    {
                        "type": "byte[64]",
                        "name": "r"
                    },
                    {
                        "type": "byte[32]",
                        "name": "s"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "opt_in_token_id",
                "args": [
                    {
                        "type": "uint64",
                        "name": "id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "addTokenPair",
                "args": [
                    {
                        "type": "uint64",
                        "name": "id"
                    },
                    {
                        "type": "uint64",
                        "name": "from_chain_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "from_account"
                    },
                    {
                        "type": "uint64",
                        "name": "to_chain_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "to_account"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "removeTokenPair",
                "args": [
                    {
                        "type": "uint64",
                        "name": "id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "updateTokenPair",
                "args": [
                    {
                        "type": "uint64",
                        "name": "id"
                    },
                    {
                        "type": "uint64",
                        "name": "from_chain_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "from_account"
                    },
                    {
                        "type": "uint64",
                        "name": "to_chain_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "to_account"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "initialize",
                "args": [
                    {
                        "type": "address",
                        "name": "owner"
                    },
                    {
                        "type": "address",
                        "name": "updateOwner"
                    },
                    {
                        "type": "address",
                        "name": "admin"
                    },
                    {
                        "type": "address",
                        "name": "feeProxy"
                    },
                    {
                        "type": "address",
                        "name": "oracleAdmin"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delete",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setStoremanGroupConfig",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "id"
                    },
                    {
                        "type": "uint8",
                        "name": "status"
                    },
                    {
                        "type": "byte[64]",
                        "name": "gpk"
                    },
                    {
                        "type": "uint64",
                        "name": "startTime"
                    },
                    {
                        "type": "uint64",
                        "name": "endTime"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setStoremanGroupStatus",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "id"
                    },
                    {
                        "type": "uint8",
                        "name": "status"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {},
        "desc": "Cross chain entry point"
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}